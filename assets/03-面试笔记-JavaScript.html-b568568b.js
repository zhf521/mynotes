import{_ as e,o,c as a,b as d}from"./app-68913a36.js";const c={},r=d('<h2 id="_1-语言区别" tabindex="-1"><a class="header-anchor" href="#_1-语言区别" aria-hidden="true">#</a> 1. 语言区别</h2><h3 id="_1-1-面向过程" tabindex="-1"><a class="header-anchor" href="#_1-1-面向过程" aria-hidden="true">#</a> 1.1 面向过程</h3><p><strong>通过函数一步一步实现这些步骤，接着依次调用即可</strong></p><p>优点：性能上它是优于面向对象的，因为类在调用的时候需要实例化，开销过大</p><p>缺点：不易维护、复用、扩展</p><p>用途：单片机、嵌入式开发、Linux/Unix等对性能要求较高的地方</p><h3 id="_1-2-面向对象" tabindex="-1"><a class="header-anchor" href="#_1-2-面向对象" aria-hidden="true">#</a> 1.2 面向对象</h3><p><strong>将数据与函数绑定到一起，进行封装减少了重复代码的重写过程</strong></p><p>优点：易维护、易复用、易扩展，由于面向对象有<strong>封装、继承、多态性</strong>的特性，可以设计出<strong>低耦合</strong>的系统，使系统更加灵活、更加易于维护</p><p>缺点：性能比面向过程低</p><h2 id="_2-bom和dom" tabindex="-1"><a class="header-anchor" href="#_2-bom和dom" aria-hidden="true">#</a> 2. BOM和DOM</h2><h3 id="_2-1-bom-window" tabindex="-1"><a class="header-anchor" href="#_2-1-bom-window" aria-hidden="true">#</a> 2.1 BOM（window）</h3><p>Browser Object Model（浏览器对象模型），是JavaScript的组成之一，它提供了独立于内容与浏览器窗口进行交互的对象，使用浏览器对象模型可以实现与HTML的交互</p><p>window对象：<code>alert()</code> , <code>prompt()</code> , <code>confirm()</code> , <code>setInterval()</code> , <code>clearInterval()</code> , <code>setTimeout()</code> , <code>clearTimeout()</code></p><p>history对象：<code>go()</code>、<code>back()</code> , <code>foward()</code></p><p>location对象：<code>href</code>属性</p><h3 id="_2-2-dom-document" tabindex="-1"><a class="header-anchor" href="#_2-2-dom-document" aria-hidden="true">#</a> 2.2 DOM（document）</h3><p>Document Object Model（文档对象模型）。</p><p>JavaScript中通过DOM来对HTML文档进行操作</p><p>文档是整个的HTML网页文档</p><p>将网页中的每一个部分都转换为了一个对象</p><p>使用模型来表示对象之间的关系，方便获取对象</p>',22),t=[r];function n(i,h){return o(),a("div",null,t)}const s=e(c,[["render",n],["__file","03-面试笔记-JavaScript.html.vue"]]);export{s as default};
