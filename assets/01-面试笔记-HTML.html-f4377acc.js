import{_ as t,o as s,c as a,b as n}from"./app-ac3006bf.js";const e={},r=n(`<h2 id="_1-如何理解html语义化" tabindex="-1"><a class="header-anchor" href="#_1-如何理解html语义化" aria-hidden="true">#</a> 1. 如何理解HTML语义化</h2><p>语义化是指根据内容的结构化（内容语义化），选择合适的标签（代码语义化）。通俗来讲就是用正确的标签做正确的事情</p><p>语义化的优点如下：</p><ul><li><p><strong>用户</strong>：提高<strong>体验</strong>，比如：<strong>title，alt</strong>用于<strong>解释</strong>名词和图片信息</p></li><li><p><strong>非技术</strong>人员：能看懂代码，很好的呈现内容<strong>结构</strong>、代码结构</p></li><li><p><strong>技术</strong>人员：便于团队<strong>开发与维护</strong>，<strong>语义化</strong>更具有<strong>可读性</strong></p></li><li><p><strong>搜索引擎</strong>：利于<strong>SEO</strong>。语义化能和搜索引擎建立更好的联系，优化搜索。还支持读屏软件，根据文章可以自动生成目录，有利于<strong>无障碍</strong></p></li></ul><p>常见的语义化标签：</p><p><code>&lt;header&gt;&lt;/header&gt;</code> 头部</p><p><code>&lt;nav&gt;&lt;/nav&gt;</code> 导航栏</p><p><code>&lt;section&gt;&lt;/section&gt;</code> 区块（有语义化的div）</p><p><code>&lt;main&gt;&lt;/main&gt;</code> 主要区域</p><p><code>&lt;article&gt;&lt;/article&gt;</code> 主要内容</p><p><code>&lt;aside&gt;&lt;/aside&gt;</code> 侧边栏</p><p><code>&lt;footer&gt;&lt;/footer&gt;</code> 底部</p><h2 id="_2-web标准与w3c标准" tabindex="-1"><a class="header-anchor" href="#_2-web标准与w3c标准" aria-hidden="true">#</a> 2. WEB标准与W3C标准</h2><p>WEB标准是指由万维网联盟（World Wide Web Consortium，简称W3C）制定的一系列技术规范和指南，旨在确保网页在不同的浏览器和设备上具有一致的表现和行为</p><p>W3C标准是由W3C组织制定和推广的一系列技术标准，旨在推动网络技术的发展和互操作性</p><p><strong>具体来说，WEB标准和W3C标准强调以下几个方面：</strong></p><ul><li><strong>标签闭合</strong>：HTML标签必须按照规定的格式正确闭合，以确保页面结构的准确性和一致性</li><li><strong>标签小写</strong>：HTML标签和属性应该使用小写字母，以避免浏览器解析错误</li><li><strong>不乱嵌套</strong>：HTML标签应该按照正确的嵌套规则进行使用，不应该出现乱七八糟的嵌套结构，以确保页面结构的清晰和可维护性</li><li><strong>使用外链CSS和JS</strong>：将CSS样式和JavaScript代码尽可能地放在外部文件中，并通过链接的方式引入，以实现结构、行为和表现的分离，提高代码的可重用性和可维护性</li></ul><h2 id="_3-src和href的区别" tabindex="-1"><a class="header-anchor" href="#_3-src和href的区别" aria-hidden="true">#</a> 3. src和href的区别</h2><p><strong>src 用于替换当前元素，href 用于在当前文档和引用资源之间确立联系</strong></p><h3 id="_1-src" tabindex="-1"><a class="header-anchor" href="#_1-src" aria-hidden="true">#</a> 1. src</h3><p>src指向外部资源的位置，指向的内容将会嵌入到文档中当前标签所在位置；在请求 src 资源时会将其指向的资源下载并应用到文档内</p><p>src用于img、input、style、script、iframe</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span>”js.js”</span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-href" tabindex="-1"><a class="header-anchor" href="#_2-href" aria-hidden="true">#</a> 2. href</h3><p>href 是 Hypertext Reference 的缩写，指向网络资源所在位置，建立和当前元素（锚点）或当前文档（链接）之间的链接</p><p>href用于link、a标签</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>”common.css”</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>”stylesheet”/</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,27),o=[r];function l(p,c){return s(),a("div",null,o)}const d=t(e,[["render",l],["__file","01-面试笔记-HTML.html.vue"]]);export{d as default};
