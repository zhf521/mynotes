import{_ as n,r as d,o as i,c as l,d as e,e as a,a as o,b as r}from"./app-52d63649.js";const c={},t=e("h2",{id:"_1-nodejs简介",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1-nodejs简介","aria-hidden":"true"},"#"),a(" 1. NodeJS简介")],-1),p=e("ol",null,[e("li",null,"Node.js 是一个独立的 JavaScript 运行环境，能独立执行 JS 代码，因为这个特点，它可以用来编写服务器后端的应用程序"),e("li",null,"Node.js 作用除了编写后端应用程序，也可以对前端代码进行压缩，转译，整合等等，提高前端开发和运行效率"),e("li",null,"Node.js 基于Chrome V8 引擎封装，独立执行 JS 代码，但是语法和浏览器环境的 V8 有所不同，没有 document 和 window，但是都支持 ECMAScript 标准的代码语法"),e("li",null,"Node.js 没有图形化界面，需要使用 cmd 终端命令行（利用一些命令来操控电脑执行某些程序软件）")],-1),u=e("h2",{id:"_2-nodejs的安装",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_2-nodejs的安装","aria-hidden":"true"},"#"),a(" 2. NodeJS的安装")],-1),h={href:"https://nodejs.org/en/",target:"_blank",rel:"noopener noreferrer"},v=r(`<p>打开安装包，默认 next 下一步即可，等待安装完成</p><p>打开命令提示符，输入如下命令，出现版本号即说明安装成功</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">node</span> <span class="token parameter variable">-v</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用国内的镜像可以提高下载速度，命令如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npmmirror.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看镜像：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> config get registry
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_3-nodejs初体验" tabindex="-1"><a class="header-anchor" href="#_3-nodejs初体验" aria-hidden="true">#</a> 3. NodeJS初体验</h2><p><code>app.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在命令提示符中使用</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">node</span> app.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行结果：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>hello
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注意：</p><ol><li>NodeJS中不能使用BOM和DOM的API，可以使用console和定时器API</li><li>NodeJS中的顶级对象为global，也可以用globalThis访问顶级对象</li></ol>`,16);function m(g,b){const s=d("ExternalLinkIcon");return i(),l("div",null,[t,p,u,e("p",null,[a("官网下载："),e("a",h,[a("Node.js"),o(s)])]),v])}const j=n(c,[["render",m],["__file","01-NodeJS入门.html.vue"]]);export{j as default};
