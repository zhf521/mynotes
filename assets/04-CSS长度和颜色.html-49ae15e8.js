import{_ as n,o as a,c as s,b as p}from"./app-0f05b52a.js";const t={},e=p(`<h2 id="_1-长度" tabindex="-1"><a class="header-anchor" href="#_1-长度" aria-hidden="true">#</a> 1. 长度</h2><h3 id="_1-1-像素" tabindex="-1"><a class="header-anchor" href="#_1-1-像素" aria-hidden="true">#</a> 1.1 像素</h3><p>像素（px）是指由图像的小方格组成的，这些小格都有一个明确的位置和被分配的色彩数值，小方格颜色和位置就决定该图像所呈现出来的样子</p><p>可以将像素视为整个图像中不可分割的单位或者是元素。不可分割的意思是它不能够再切割成更小单位抑或是元素，它是以一个单一颜色的小格存在。每一个点阵图像包含了一定量的像素，这些像素决定图像在屏幕上所呈现的大小，也就是说，显示器屏幕实际上是由一个一个的小点（单位色块，即像素）构成的</p><h3 id="_1-2-屏幕分辨率" tabindex="-1"><a class="header-anchor" href="#_1-2-屏幕分辨率" aria-hidden="true">#</a> 1.2 屏幕分辨率</h3><p>例如，屏幕分辨率是1920×1080，则该屏幕水平方向有1920个像素，垂直方向有1080个像素</p><ul><li>不同屏幕的像素大小是不同的，也就是说像素大小不像我们现行的长度单位（如米/m）那样有着固定的国际标准</li><li>所以同样的像素大小在不同的设备上显示效果是不一样的，像素越小的屏幕显示的效果越清晰</li></ul><h3 id="_1-3-图像分辨率" tabindex="-1"><a class="header-anchor" href="#_1-3-图像分辨率" aria-hidden="true">#</a> 1.3 图像分辨率</h3><p>例如，一张图片分辨率是300x200，则该图片在屏幕上按1:1缩放时，水平方向有300个像素，垂直方向有200个像素点</p><ul><li>图片分辨率越高，1:1缩放时面积越大</li><li>图片分辨率越低，1:1缩放时面积越小</li></ul><p>同一台设备像素大小是不变的，那把图片放大超过100%时占的像素点就多了，但是图像也会变得模糊</p><h3 id="_1-4-百分比" tabindex="-1"><a class="header-anchor" href="#_1-4-百分比" aria-hidden="true">#</a> 1.4 百分比</h3><p>将属性值设置为相对于其父元素属性的百分比，可以使子元素跟随父元素的改变而改变</p><h3 id="_1-5-em" tabindex="-1"><a class="header-anchor" href="#_1-5-em" aria-hidden="true">#</a> 1.5 em</h3><p>em是相对于元素的字体大小来计算的，<code>1em = &lt;self&gt;.font-size</code>，也就说em值会根据元素本身的字体大小的改变而改变</p><h3 id="_1-6-rem" tabindex="-1"><a class="header-anchor" href="#_1-6-rem" aria-hidden="true">#</a> 1.6 rem</h3><p>rem是相对于根元素的字体大小来计算，<code>1em = &lt;root&gt;.font-size</code>，也就说em值会根据根元素的字体大小的改变而改变</p><h2 id="_2-颜色" tabindex="-1"><a class="header-anchor" href="#_2-颜色" aria-hidden="true">#</a> 2. 颜色</h2><h3 id="_2-1-颜色名" tabindex="-1"><a class="header-anchor" href="#_2-1-颜色名" aria-hidden="true">#</a> 2.1 颜色名</h3><p>编写方式：直接使用颜色对应的英文单词，编写比较简单</p><p>如：</p><ol><li>红色：red</li><li>绿色：green</li><li>蓝色：blue</li><li>紫色：purple</li><li>橙色：orange</li><li>灰色：gray</li></ol><h3 id="_2-2-rgb或rgba" tabindex="-1"><a class="header-anchor" href="#_2-2-rgb或rgba" aria-hidden="true">#</a> 2.2 rgb或rgba</h3><p>编写方式：使用红、黄、蓝这三种光的三原色进行组合</p><p>r 表示红色， g 表示绿色， b 表示蓝色， a 表示透明度</p><p>例：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 使用 0~255 之间的数字表示一种颜色 */</span>
<span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/* 红色 */</span> 
<span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/* 绿色 */</span> 
<span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 255<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/* 蓝色 */</span> 
<span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/* 黑色 */</span> 
<span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/* 白色 */</span>
<span class="token comment">/* 混合出任意一种颜色 */</span> 
<span class="token property">color</span><span class="token punctuation">:</span><span class="token function">rgb</span><span class="token punctuation">(</span>138<span class="token punctuation">,</span> 43<span class="token punctuation">,</span> 226<span class="token punctuation">)</span> <span class="token comment">/* 紫罗兰色 */</span> <span class="token property">color</span><span class="token punctuation">:</span><span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.5<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/* 半透明的红色 */</span>
<span class="token comment">/* 也可以使用百分比表示一种颜色（用的少） */</span> 
<span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>100%<span class="token punctuation">,</span> 0%<span class="token punctuation">,</span> 0%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/* 红色 */</span> 
<span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>100%<span class="token punctuation">,</span> 0%<span class="token punctuation">,</span> 0%<span class="token punctuation">,</span>50%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/* 半透明的红色 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>小规律：</p><ol><li>若三种颜色值相同，呈现的是灰色，值越大，灰色越浅</li><li>rgb (0, 0, 0) 是黑色， rgb (255, 255,255) 是白色</li><li>对于 rbga 来说，前三位的 rgb 形式要保持一致，要么都是 0~255 的数字，要么都是百分比</li></ol><h3 id="_2-3-hex或hexa" tabindex="-1"><a class="header-anchor" href="#_2-3-hex或hexa" aria-hidden="true">#</a> 2.3 HEX或HEXA</h3><p>HEX 的原理同与 rgb 一样，依然是通过：红、绿、蓝色进行组合，只不过要用 6位（分成3组） 来表达，格式为：<code>#rrggbb</code></p><p>每一位数字的取值范围是： 0 ~ f ，即：（ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, a, b, c, d, e, f ），所以每一种光的最小值是： <code>00</code> ，最大值是： <code>ff</code></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">color</span><span class="token punctuation">:</span> #ff0000<span class="token punctuation">;</span><span class="token comment">/* 红色 */</span> 
<span class="token property">color</span><span class="token punctuation">:</span> #00ff00<span class="token punctuation">;</span><span class="token comment">/* 绿色 */</span> 
<span class="token property">color</span><span class="token punctuation">:</span> #0000ff<span class="token punctuation">;</span><span class="token comment">/* 蓝色 */</span> 
<span class="token property">color</span><span class="token punctuation">:</span> #000000<span class="token punctuation">;</span><span class="token comment">/* 黑色 */</span> 
<span class="token property">color</span><span class="token punctuation">:</span> #ffffff<span class="token punctuation">;</span><span class="token comment">/* 白色 */</span> 
<span class="token comment">/* 如果每种颜色的两位都是相同的，就可以简写*/</span> 
<span class="token property">color</span><span class="token punctuation">:</span> #ff9988<span class="token punctuation">;</span><span class="token comment">/* 可简为：#f98 */</span>
<span class="token comment">/* 但要注意前三位简写了，那么透明度就也要简写 */</span> <span class="token property">color</span><span class="token punctuation">:</span> #ff998866<span class="token punctuation">;</span><span class="token comment">/* 可简为：#f986 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-hsl或hsla" tabindex="-1"><a class="header-anchor" href="#_2-4-hsl或hsla" aria-hidden="true">#</a> 2.4 HSL或HSLA</h3><p>HSL 是通过：色相、饱和度、亮度，来表示一个颜色的，格式为：<code>hsl(色相,饱和度,亮度)</code></p><p>色相：取值范围是 0~360 度，具体度数对应的颜色如下图</p><figure><img src="https://zhf-picture.oss-cn-qingdao.aliyuncs.com/my-img/CSS长度和颜色01.png" alt="CSS长度和颜色01.png" tabindex="0" loading="lazy"><figcaption>CSS长度和颜色01.png</figcaption></figure><p>饱和度：取值范围是 0%~100% 。（向色相中对应颜色中添加灰色， 0% 全灰， 100% 没有灰）</p><p>亮度：取值范围是 0%~100% 。（ 0% 亮度没了，所以就是黑色。 100% 亮度太强，所以就是白色了）</p><p>HSLA 其实就是在 HSL 的基础上，添加了透明度</p>`,40),c=[e];function o(l,i){return a(),s("div",null,c)}const r=n(t,[["render",o],["__file","04-CSS长度和颜色.html.vue"]]);export{r as default};
