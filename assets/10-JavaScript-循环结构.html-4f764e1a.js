import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,b as e}from"./app-0737415e.js";const p={},t=e(`<p>循环结构，就是根据某些给出的条件，重复的执行同一段代码</p><p>循环三要素：</p><ol><li>初始值 （经常用变量）</li><li>终止条件</li><li>变量的变化量</li></ol><h2 id="_1-while循环" tabindex="-1"><a class="header-anchor" href="#_1-while循环" aria-hidden="true">#</a> 1. while循环</h2><p><code>while</code>，中文叫当…时，其实就是当条件满足时就执行代码，一旦不满足了就不执行了</p><p>语法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">while</span> <span class="token punctuation">(</span>条件表达式<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// 循环体    </span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因为满足条件就执行，所以我们写的时候一定要注意，就是设定一个边界值，不然就一直循环下去了</p><p>例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 1. 初始值</span>
<span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token comment">// 2. 终止条件</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>num <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 3. 要执行的代码</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;当前的 num 的值是 &#39;</span> <span class="token operator">+</span> num<span class="token punctuation">)</span>
  <span class="token comment">// 4. 变量的变化量</span>
  num <span class="token operator">=</span> num <span class="token operator">+</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-do-while循环" tabindex="-1"><a class="header-anchor" href="#_2-do-while循环" aria-hidden="true">#</a> 2. do while循环</h2><p>是一个和 <code>while</code> 循环类似的循环，<code>while</code> 会先进行条件判断，满足就执行，不满足直接就不执行了，但是 <code>do while</code> 循环是先不管条件，先执行一回，然后再开始进行条件判断</p><p>语法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">do</span> <span class="token punctuation">{</span>
    要执行的代码 
<span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>条件<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 下面这个代码，条件一开始就不满足，但是依旧会执行一次 do 后面 {} 内部的代码</span>
<span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">10</span>
<span class="token keyword">do</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;我执行了一次&#39;</span><span class="token punctuation">)</span>
  num <span class="token operator">=</span> num <span class="token operator">+</span> <span class="token number">1</span>
<span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>num <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-for循环" tabindex="-1"><a class="header-anchor" href="#_3-for循环" aria-hidden="true">#</a> 3. for循环</h2><p>语法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">for</span><span class="token punctuation">(</span>起始值<span class="token punctuation">;</span> 终止条件<span class="token punctuation">;</span> 变化量<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 要重复执行的代码</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 把初始化，条件判断，自身改变，写在了一起</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 这里写的是要执行的代码</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// 控制台会依次输出 1 ~ 10 </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-for循环嵌套" tabindex="-1"><a class="header-anchor" href="#_4-for循环嵌套" aria-hidden="true">#</a> 4. for循环嵌套</h2><p>循环之中又嵌套了另一个循环，外层循环循环一次，里层循环循环全部</p><p>例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 1. 外面的循环</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token comment">// 2. 里层的循环</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-break终止循环" tabindex="-1"><a class="header-anchor" href="#_5-break终止循环" aria-hidden="true">#</a> 5. break终止循环</h2><p>在循环没有进行完毕的时候，因为我设置的条件满足，提前终止循环</p><p>比如：我要吃五个包子，吃到三个的时候，不能再吃了，我就停止吃包子这个事情</p><p>要终止循环，就可以直接使用 <code>break</code> 关键字</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 每循环一次，吃一个包子</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;我吃了一个包子&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// 当 i 的值为 3 的时候，条件为 true，执行 {} 里面的代码终止循环</span>
  <span class="token comment">// 循环就不会继续向下执行了，也就没有 4 和 5 了</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">break</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-continue结束本次循环" tabindex="-1"><a class="header-anchor" href="#_6-continue结束本次循环" aria-hidden="true">#</a> 6. continue结束本次循环</h2><p>在循环中，把循环的本次跳过去，继续执行后续的循环</p><p>比如：吃五个包子，到第三个的时候，第三个掉地下了，不吃了，跳过第三个，继续吃第四个和第五个</p><p>跳过本次循环，就可以使用 <code>continue</code> 关键字</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 当 i 的值为 3 的时候，执行 {} 里面的代码</span>
  <span class="token comment">// {} 里面有 continue，那么本次循环后面的代码就都不执行了</span>
  <span class="token comment">// 自动算作 i 为 3 的这一次结束了，去继续执行 i = 4 的那次循环了</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;这个是第三个包子，掉地下了，我不吃了&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">continue</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;我吃了一个包子&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,35),o=[t];function c(i,l){return s(),a("div",null,o)}const d=n(p,[["render",c],["__file","10-JavaScript-循环结构.html.vue"]]);export{d as default};
