import{_ as i,r as e,o as p,c as d,a as s,w as o,d as n,e as a,b as c}from"./app-91bc4861.js";const r={},u=n("h2",{id:"_1-margin负值运用",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-margin负值运用","aria-hidden":"true"},"#"),a(" 1. margin负值运用")],-1),k=n("ol",null,[n("li",null,[a("让每个盒子 margin 往左侧移动"),n("code",null,"-1px"),a(" 正好压住相邻盒子边框")]),n("li",null,"鼠标经过某个盒子的时候，提高当前盒子的层级即可（如果没有有定位，则加相对定位（保留位置），如果有定位，则加（z-index）")],-1),h=n("div",{class:"language-html line-numbers-mode","data-ext":"html"},[n("pre",{class:"language-html"},[n("code",null,[a(),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("ul")]),n("span",{class:"token punctuation"},">")]),a(`
	`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("li")]),n("span",{class:"token punctuation"},">")]),a("1"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("li")]),n("span",{class:"token punctuation"},">")]),a(`
	`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("li")]),n("span",{class:"token punctuation"},">")]),a("2"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("li")]),n("span",{class:"token punctuation"},">")]),a(`
	`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("li")]),n("span",{class:"token punctuation"},">")]),a("3"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("li")]),n("span",{class:"token punctuation"},">")]),a(`
	`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("li")]),n("span",{class:"token punctuation"},">")]),a("4"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("li")]),n("span",{class:"token punctuation"},">")]),a(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("ul")]),n("span",{class:"token punctuation"},">")]),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),m=n("div",{class:"language-css line-numbers-mode","data-ext":"css"},[n("pre",{class:"language-css"},[n("code",null,[n("span",{class:"token selector"},"ul li"),a(),n("span",{class:"token punctuation"},"{"),a(`
	`),n("span",{class:"token property"},"position"),n("span",{class:"token punctuation"},":"),a(" relative"),n("span",{class:"token punctuation"},";"),a(`
	`),n("span",{class:"token property"},"float"),n("span",{class:"token punctuation"},":"),a(" left"),n("span",{class:"token punctuation"},";"),a(`
	`),n("span",{class:"token property"},"list-style"),n("span",{class:"token punctuation"},":"),a(" none"),n("span",{class:"token punctuation"},";"),a(`
	`),n("span",{class:"token property"},"width"),n("span",{class:"token punctuation"},":"),a(" 150px"),n("span",{class:"token punctuation"},";"),a(`
	`),n("span",{class:"token property"},"height"),n("span",{class:"token punctuation"},":"),a(" 200px"),n("span",{class:"token punctuation"},";"),a(`
	`),n("span",{class:"token property"},"border"),n("span",{class:"token punctuation"},":"),a(" 1px solid red"),n("span",{class:"token punctuation"},";"),a(`
	`),n("span",{class:"token property"},"margin-left"),n("span",{class:"token punctuation"},":"),a(" -1px"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token selector"},"ul li:hover"),a(),n("span",{class:"token punctuation"},"{"),a(`
	`),n("span",{class:"token property"},"z-index"),n("span",{class:"token punctuation"},":"),a(" 1"),n("span",{class:"token punctuation"},";"),a(`
	`),n("span",{class:"token property"},"border"),n("span",{class:"token punctuation"},":"),a(" 1px solid blue"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),b=c('<h2 id="_2-文字围绕浮动元素" tabindex="-1"><a class="header-anchor" href="#_2-文字围绕浮动元素" aria-hidden="true">#</a> 2. 文字围绕浮动元素</h2><p>利用浮动元素不会压住文字的特性实现</p><h2 id="_3-行内块巧妙运用" tabindex="-1"><a class="header-anchor" href="#_3-行内块巧妙运用" aria-hidden="true">#</a> 3. 行内块巧妙运用</h2><p>页面底部页码栏</p><p>页码在页面中间显示:</p><ol><li>把这些链接盒子转换为行内块，之后给父级指定 <code>text-align: center;</code></li><li>利用行内块元素中间有缝隙，并且给父级添加 <code>text-align: center;</code> 行内块元素会水平会居中</li></ol><h2 id="_4-css三角形" tabindex="-1"><a class="header-anchor" href="#_4-css三角形" aria-hidden="true">#</a> 4. CSS三角形</h2><p>网页中常见一些三角形，使用 CSS 直接画出来就可以，不必做成图片或者字体图标</p><ol><li>我们用 CSS 边框可以模拟三角效果</li><li>宽度高度为 0</li><li>我们 4 个边框都要写，只保留需要的边框颜色，其余的不能省略，都改为 transparent 透明就好了</li><li>为了照顾兼容性低版本的浏览器，加上 <code>font-size: 0;</code> <code>line-height: 0;</code></li></ol>',9),g=n("div",{class:"language-html line-numbers-mode","data-ext":"html"},[n("pre",{class:"language-html"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("div")]),a(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("box1"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("div")]),n("span",{class:"token punctuation"},">")]),a(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),a("div")]),a(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),a("box2"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),a("div")]),n("span",{class:"token punctuation"},">")]),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),v=n("div",{class:"language-css line-numbers-mode","data-ext":"css"},[n("pre",{class:"language-css"},[n("code",null,[n("span",{class:"token selector"},".box1"),a(),n("span",{class:"token punctuation"},"{"),a(`
	`),n("span",{class:"token property"},"width"),n("span",{class:"token punctuation"},":"),a(" 0"),n("span",{class:"token punctuation"},";"),a(`
	`),n("span",{class:"token property"},"height"),n("span",{class:"token punctuation"},":"),a(" 0"),n("span",{class:"token punctuation"},";"),a(`
	`),n("span",{class:"token property"},"border-top"),n("span",{class:"token punctuation"},":"),a(" 10px solid pink"),n("span",{class:"token punctuation"},";"),a(`
	`),n("span",{class:"token property"},"border-right"),n("span",{class:"token punctuation"},":"),a(" 10px solid red"),n("span",{class:"token punctuation"},";"),a(`
	`),n("span",{class:"token property"},"border-bottom"),n("span",{class:"token punctuation"},":"),a(" 10px solid blue"),n("span",{class:"token punctuation"},";"),a(`
	`),n("span",{class:"token property"},"border-left"),n("span",{class:"token punctuation"},":"),a(" 10px solid green"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token selector"},".box2"),a(),n("span",{class:"token punctuation"},"{"),a(`
	`),n("span",{class:"token property"},"width"),n("span",{class:"token punctuation"},":"),a(" 0"),n("span",{class:"token punctuation"},";"),a(`
	`),n("span",{class:"token property"},"height"),n("span",{class:"token punctuation"},":"),a(" 0"),n("span",{class:"token punctuation"},";"),a(`
	`),n("span",{class:"token property"},"border"),n("span",{class:"token punctuation"},":"),a(" 50px solid transparent"),n("span",{class:"token punctuation"},";"),a(`
	`),n("span",{class:"token property"},"border-top-color"),n("span",{class:"token punctuation"},":"),a(" pink"),n("span",{class:"token punctuation"},";"),a(`
	`),n("span",{class:"token property"},"margin"),n("span",{class:"token punctuation"},":"),a(" 100px auto"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),_=c(`<h2 id="_5-关于默认宽度" tabindex="-1"><a class="header-anchor" href="#_5-关于默认宽度" aria-hidden="true">#</a> 5. 关于默认宽度</h2><p>所谓的默认宽度，就是不设置 width 属性时，元素所呈现出来的宽度</p><p><code>总宽度 = 父的content - 自身的左右margin</code></p><p><code>内容区的宽度 = 父的content - 自身的左右margin - 自身的左右border - 自身的左右padding</code></p><h2 id="_6-行内元素、行内块元素" tabindex="-1"><a class="header-anchor" href="#_6-行内元素、行内块元素" aria-hidden="true">#</a> 6. 行内元素、行内块元素</h2><p>行内元素、行内块元素，可以被父元素当做文本处理</p><h2 id="_7-如何让子元素在父亲中水平居中" tabindex="-1"><a class="header-anchor" href="#_7-如何让子元素在父亲中水平居中" aria-hidden="true">#</a> 7. 如何让子元素在父亲中水平居中</h2><p>若子元素为块元素，给父元素加上： <code>margin:0 auto;</code> 若子元素为行内元素、行内块元素，给父元素加上： <code>text-align:center;</code></p><h2 id="_8-如何让子元素在父亲中垂直居中" tabindex="-1"><a class="header-anchor" href="#_8-如何让子元素在父亲中垂直居中" aria-hidden="true">#</a> 8. 如何让子元素在父亲中垂直居中</h2><p>（若想绝对垂直居中，父元素 font-size 设置为 0）</p><p>若子元素为块元素，给子元素加上： <code>margin-top</code> ，值为：<code>(父元素content －子元素盒子总高) / 2</code></p><p>若子元素为行内元素、行内块元素：让父元素的 <code>height = line-height</code> ，每个子元素都加上： <code>vertical-align: middle;</code></p><h2 id="_9-元素之间的空白问题" tabindex="-1"><a class="header-anchor" href="#_9-元素之间的空白问题" aria-hidden="true">#</a> 9. 元素之间的空白问题</h2><p>产生原因：行内元素、行内块元素，彼此之间的换行会被浏览器解析为一个空白字符</p><p>解决方案：</p><p>方案一： 去掉换行和空格（不推荐）</p><p>方案二： 给父元素设置 <code>font-size: 0</code> ，再给需要显示文字的元素，单独设置字体大小（推荐）</p><h2 id="_10-行内块的幽灵空白问题" tabindex="-1"><a class="header-anchor" href="#_10-行内块的幽灵空白问题" aria-hidden="true">#</a> 10. 行内块的幽灵空白问题</h2><p>产生原因：行内块元素与文本的基线对齐，而文本的基线与文本最底端之间是有一定距离的</p><p>解决方案：</p><p>方案一： 给行内块设置 <code>vertical-align</code> ，值不为 baseline 即可，设置为 middel 、 bottom 、 top 均可</p><p>方案二： 若父元素中只有一张图片，设置图片为 <code>display: block;</code></p><p>方案三： 给父元素设置 <code>font-size: 0;</code>。如果该行内块内部还有文本，则需单独设置 <code>font-size</code></p><h2 id="_11-常用布局名词" tabindex="-1"><a class="header-anchor" href="#_11-常用布局名词" aria-hidden="true">#</a> 11. 常用布局名词</h2><table><thead><tr><th>位置</th><th>名词</th></tr></thead><tbody><tr><td>顶部导航条</td><td><code>topbar</code></td></tr><tr><td>页头</td><td><code>header</code>、<code>page-header</code></td></tr><tr><td>导航</td><td><code>nav</code>、<code>navigator</code>、<code>navbar</code></td></tr><tr><td>搜索框</td><td><code>search</code>、<code>search-box</code></td></tr><tr><td>横幅、广告、宣传图</td><td><code>banner</code></td></tr><tr><td>主要内容</td><td><code>content</code>、<code>main</code></td></tr><tr><td>侧边栏</td><td><code>aside</code>、<code>sidebar</code></td></tr><tr><td>页脚</td><td><code>footer</code>、<code>page-footer</code></td></tr></tbody></table><h2 id="_12-重置默认样式-css初始化" tabindex="-1"><a class="header-anchor" href="#_12-重置默认样式-css初始化" aria-hidden="true">#</a> 12. 重置默认样式（CSS初始化）</h2><p>很多元素都有默认样式，比如：</p><ol><li>p 元素有默认的上下 margin</li><li>h1~h6 标题也有上下 margin ，且字体加粗</li><li>body 元素有默认的 8px 外边距</li><li>超链接有默认的文字颜色和下划线</li><li>ul 元素有默认的左 padding</li><li>……</li></ol><h3 id="_12-1-使用全局选择器" tabindex="-1"><a class="header-anchor" href="#_12-1-使用全局选择器" aria-hidden="true">#</a> 12.1 使用全局选择器</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">*</span> <span class="token punctuation">{</span> 
	<span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span> 
	<span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span> 
	......
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_12-2-reset-css" tabindex="-1"><a class="header-anchor" href="#_12-2-reset-css" aria-hidden="true">#</a> 12.2 reset.css</h3><p>选择到具有默认样式的元素，清空其默认的样式</p><h3 id="_12-3-normalize-css" tabindex="-1"><a class="header-anchor" href="#_12-3-normalize-css" aria-hidden="true">#</a> 12.3 Normalize.css</h3><p><code>Normalize.css</code> 是一种最新方案，它在清除默认样式的基础上，保留了一些有价值的默认样式</p>`,34),x={href:"http://necolas.github.io/normalize.css/",target:"_blank",rel:"noopener noreferrer"},f=n("p",null,[a("相对于 "),n("code",null,"reset.css"),a(" ， "),n("code",null,"Normalize.css"),a(" 有如下优点：")],-1),y=n("ol",null,[n("li",null,"保护了有价值的默认样式，而不是完全去掉它们"),n("li",null,"为大部分 HTML 元素提供一般化的样式"),n("li",null,"新增对 HTML5 元素的设置"),n("li",null,"对并集选择器的使用比较谨慎，有效避免调试工具杂乱")],-1);function C(S,z){const t=e("CodeDemo"),l=e("ExternalLinkIcon");return p(),d("div",null,[u,k,s(t,{id:"code-demo-15",type:"normal",title:"Demo%20%E6%BC%94%E7%A4%BA",code:"eJx1TjsOwjAMvYqVmYr/EipO0qWQQCyZpEpcKFS9O25Khw4slt7z+/XK8YOUVlC2dK58xSXheVuu5c5ot0D7BTr8ULnOdrVS15QkriUghH6UNSEhY/AaoqWa8WlPI32jULMGsjfOmDBxkfhNVoMPfhK90LDTsD1umi4TzuLdiW23mZlLiMZG0TQdpEBopMbkz6OOd/TF2KChkL+wQ+XzNO3C08Zp4KdAb2wnEX8CL9SOc8Srhi+rq2rv"},{default:o(()=>[h,m]),_:1}),b,s(t,{id:"code-demo-74",type:"normal",title:"Demo%20%E6%BC%94%E7%A4%BA",code:"eJyNj80OgyAQhF+FcO6PmvRirU/CBYUqKbIE1tbE+O6FmLboqcfd+WZ2dqY9DpqWtBLqSVrNvb8x2sCUM1pX57CsmdlrRaLRA229DwGnaCIzMwxfSmBfkuwah16qrsfP1IAT0h0RbEnyzE7Eg1aCWGUeqe5WT0I4KVKgAUQYNkSjR5kiWt63EZ2T0gRiYSaWLf4sW5LLLwMdN95yJw3u/jm2oCHA31cG7jplYoNo5yPCepsub/Hagzc="},{default:o(()=>[g,v]),_:1}),_,n("p",null,[a("官网地址："),n("a",x,[a("Normalize.css"),s(l)])]),f,y])}const L=i(r,[["render",C],["__file","11-CSS布局技巧.html.vue"]]);export{L as default};
