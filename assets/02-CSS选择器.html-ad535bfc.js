import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as c,c as l,a as d,w as p,b as a,d as n,e as s}from"./app-96ebe5f0.js";const o={},r=a(`<p>选择器 (选择符)就是根据不同需求把不同的标签选出来，简单来说，就是选择标签用的</p><h2 id="_1-css基本选择器" tabindex="-1"><a class="header-anchor" href="#_1-css基本选择器" aria-hidden="true">#</a> 1. CSS基本选择器</h2><p>基础选择器包括：</p><ul><li>通配符选择器</li><li>标签（元素）选择器</li><li>类选择器</li><li>id 选择器</li></ul><h3 id="_1-1-通配符选择器" tabindex="-1"><a class="header-anchor" href="#_1-1-通配符选择器" aria-hidden="true">#</a> 1.1 通配符选择器</h3><p>作用：可以选中所有的 HTML 元素</p><p>语法：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">*</span> <span class="token punctuation">{</span>
    <span class="token property">属性名</span><span class="token punctuation">:</span> 属性值<span class="token punctuation">;</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">*</span> <span class="token punctuation">{</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-标签选择器" tabindex="-1"><a class="header-anchor" href="#_1-2-标签选择器" aria-hidden="true">#</a> 1.2 标签选择器</h3><p>标签选择器（元素选择器）是指用 HTML 标签名称作为选择器，按标签名称分类，为页面中某一类标签指定统一的 CSS 样式</p><p>作用：为页面中某种元素统一设置样式</p><p>语法：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">标签名</span><span class="token punctuation">{</span>
    属性名：属性值
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 选中所有h1元素 */</span>
<span class="token selector">h1</span> <span class="token punctuation">{</span> 
	<span class="token property">color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span> 
	<span class="token property">font-size</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>
<span class="token punctuation">}</span> 

<span class="token comment">/* 选中所有p元素 */</span> 

<span class="token selector">p</span> <span class="token punctuation">{</span> 
	<span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span> 
	<span class="token property">font-size</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-类选择器" tabindex="-1"><a class="header-anchor" href="#_1-3-类选择器" aria-hidden="true">#</a> 1.3 类选择器</h3><p>如果想要差异化选择不同的标签，单独选一个或者某几个标签，可以使用类选择器</p><p>作用：根据元素的 class 值，来选中某些元素</p><p>语法：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.类名</span> <span class="token punctuation">{</span>
    <span class="token property">属性名</span><span class="token punctuation">:</span> 属性值<span class="token punctuation">;</span>  
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 选中所有class值为speak的元素 */</span> 
<span class="token selector">.speak</span> <span class="token punctuation">{</span> 
	<span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span> 
<span class="token punctuation">}</span> 
<span class="token comment">/* 选中所有class值为answer的元素 */</span> 
<span class="token selector">.answer</span> <span class="token punctuation">{</span>
	<span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>如果想要差异化选择不同的标签，单独选一个或者某几个标签，可以使用类选择器</li><li>类选择器在 HTML 中以 class 属性表示，在 CSS 中，类选择器以一个点号 <code>.</code> 显示</li><li>类选择器使用<code>.</code>（英文点号）进行标识，后面紧跟类名（自定义，我们自己命名的）</li><li>可以理解为给这个标签起了一个名字，来表示</li><li>长名称或词组可以使用中横线来为选择器命名</li><li>不要使用纯数字、中文等命名，尽量使用英文字母来表示</li><li>命名要有意义，尽量使别人一眼就知道这个类名的目的</li></ol><p>注意：在标签 class 属性中可以写多个类名，多个类名中间必须用空格分开，这个标签就可以分别具有这些类名的样式</p><h3 id="_1-4-id选择器" tabindex="-1"><a class="header-anchor" href="#_1-4-id选择器" aria-hidden="true">#</a> 1.4 id选择器</h3><p>id 选择器可以为标有特定 id 的 HTML 元素指定特定的样式</p><p>作用：根据元素的 id 属性值，来精准的选中某个元素</p><p>语法：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">#id值</span> <span class="token punctuation">{</span>
    <span class="token property">属性名</span><span class="token punctuation">:</span> 属性值<span class="token punctuation">;</span>  
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 选中id值为earthy的那个元素 */</span> 
<span class="token selector">#earthy</span> <span class="token punctuation">{</span> 
	<span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span> 
	<span class="token property">font-size</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：</p><ul><li>id 属性值：尽量由字母、数字、下划线 <code>_</code> 、短杠 <code>-</code> 组成，最好以字母开头、不要包含空格、区分大小写</li><li>一个元素只能拥有一个 id 属性，多个元素的 id 属性值不能相同</li><li>一个元素可以同时拥有 id 和 class 属性</li></ul><h3 id="_1-5-选择器总结" tabindex="-1"><a class="header-anchor" href="#_1-5-选择器总结" aria-hidden="true">#</a> 1.5 选择器总结</h3><table><thead><tr><th>基础选择器</th><th>作用</th><th>特点</th><th>使用情况</th><th>用法</th></tr></thead><tbody><tr><td>标签选择器</td><td>可以选出所有相同的标签</td><td>不能差异化选择</td><td>较多</td><td><code>p{color: red};</code></td></tr><tr><td>类选择器</td><td>可以选出 1 个或多个标签</td><td>可以根据需求选择</td><td>非常多</td><td><code>. nav{color: red;}</code></td></tr><tr><td>id 选择器</td><td>一次只能选择 1 个标签</td><td>ID 属性只能在每个 HTML 文档中出现一次</td><td>一般和 js 搭配</td><td><code># nav{color: red;}</code></td></tr><tr><td>通配符选择器</td><td>选择所有的标签</td><td>选择的太多，有部分不需要</td><td>特殊情况使用</td><td><code>* {color: red;}</code></td></tr></tbody></table><h2 id="_2-css复合选择器" tabindex="-1"><a class="header-anchor" href="#_2-css复合选择器" aria-hidden="true">#</a> 2. CSS复合选择器</h2><p>在 CSS 中，可以根据选择器的类型把选择器分为<mark>基础选择器</mark>和<mark>复合选择器</mark>，复合选择器是建立在基础选择器之上，对基本选择器进行组合形成的</p><p>复合选择器是由两个或多个基础选择器，通过不同的方式组合而成的，可以更准确、更高效的选择目标元素（标签）</p><p>常用的复合选择器包括：</p><ul><li>交集选择器</li><li>并集选择器</li><li>后代选择器</li><li>子元素选择器</li><li>兄弟选择器</li><li>属性选择器</li><li>伪类选择器</li><li>伪元素选择器</li><li>……</li></ul><h3 id="_2-1-交集选择器" tabindex="-1"><a class="header-anchor" href="#_2-1-交集选择器" aria-hidden="true">#</a> 2.1 交集选择器</h3><p>作用：选中同时符合多个条件的元素</p><p>语法：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">选择器1选择器2选择器3...选择器n</span> <span class="token punctuation">{</span>
	样式声明
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 选中类名为beauty的p元素，此种写法用的非常多 */</span>
<span class="token selector">p.beauty</span> <span class="token punctuation">{</span> 
	<span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
<span class="token comment">/* 选中：类名包含rich和beauty的元素 */</span> 
<span class="token selector">.rich.beauty</span> <span class="token punctuation">{</span> 
	<span class="token property">color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：</p><ol><li>有标签名，标签名必须写在前面</li><li>id 选择器、通配选择器，理论上可以作为交集的条件，但实际应用中几乎不用 —— 因为没有意义</li><li>交集选择器中不可能出现两个元素选择器，因为一个元素，不可能即是 p 元素又是 span 元 素</li><li>用的最多的交集选择器是：元素选择器配合类名选择器，例如： <code>p.beauty</code></li></ol><h3 id="_2-2-并集选择器" tabindex="-1"><a class="header-anchor" href="#_2-2-并集选择器" aria-hidden="true">#</a> 2.2 并集选择器</h3><p>作用：选中多个选择器对应的元素，又称：分组选择器</p><p>语法：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">选择器1, 选择器2, 选择器3, ... 选择器n</span> <span class="token punctuation">{</span>
	样式声明
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 选中id为peiqi，或类名为rich，或类名为beauty的元素 */</span>
<span class="token selector">#peiqi, 
.rich,
.beauty</span> <span class="token punctuation">{</span>
	<span class="token property">font-size</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>
	<span class="token property">background-color</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span> 
	<span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：</p><ol><li>并集选择器，我们一般竖着写</li><li>任何形式的选择器，都可以作为并集选择器的一部分</li><li>并集选择器，通常用于集体声明，可以缩小样式表体积</li></ol><h3 id="_2-3-基于html元素间的关系的选择器" tabindex="-1"><a class="header-anchor" href="#_2-3-基于html元素间的关系的选择器" aria-hidden="true">#</a> 2.3 基于HTML元素间的关系的选择器</h3><p>分为：父元素、子元素、祖先元素、后代元素、兄弟元素</p><p>父元素：<mark>直接</mark>包裹某个元素的元素，就是该元素的父元素</p><figure><img src="https://zhf-picture.oss-cn-qingdao.aliyuncs.com/my-img/CSS选择器01.png" alt="CSS选择器01.png" tabindex="0" loading="lazy"><figcaption>CSS选择器01.png</figcaption></figure><p>子元素：被父元素<mark>直接</mark>包含的元素（简记：儿子元素）</p><figure><img src="https://zhf-picture.oss-cn-qingdao.aliyuncs.com/my-img/CSS选择器02.png" alt="CSS选择器02.png" tabindex="0" loading="lazy"><figcaption>CSS选择器02.png</figcaption></figure><p>祖先元素：父亲的父亲......，一直往外找，都是祖先（父元素也算是祖先元素的一种）</p><figure><img src="https://zhf-picture.oss-cn-qingdao.aliyuncs.com/my-img/CSS选择器03.png" alt="CSS选择器03.png" tabindex="0" loading="lazy"><figcaption>CSS选择器03.png</figcaption></figure><p>后代元素：儿子的儿子......，一直往里找，都是后代（子元素，也算是后代元素的一种）</p><figure><img src="https://zhf-picture.oss-cn-qingdao.aliyuncs.com/my-img/CSS选择器04.png" alt="CSS选择器04.png" tabindex="0" loading="lazy"><figcaption>CSS选择器04.png</figcaption></figure><p>兄弟元素：具有相同父元素的元素，互为兄弟元素</p><figure><img src="https://zhf-picture.oss-cn-qingdao.aliyuncs.com/my-img/CSS选择器05.png" alt="CSS选择器05.png" tabindex="0" loading="lazy"><figcaption>CSS选择器05.png</figcaption></figure><h4 id="_2-3-1-后代选择器" tabindex="-1"><a class="header-anchor" href="#_2-3-1-后代选择器" aria-hidden="true">#</a> 2.3.1 后代选择器</h4><p>作用：选中指定元素中，符合要求的后代元素</p><p>语法：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">选择器1 选择器2 选择器3 ...... 选择器n</span> <span class="token punctuation">{</span>
	样式声明
<span class="token punctuation">}</span> 
<span class="token comment">/*（先写祖先，再写后代）*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>语法说明：中间用空格隔开</p><p>例：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 选中ul中的所有li */</span> 
<span class="token selector">ul li</span> <span class="token punctuation">{</span> 
	<span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span> 
<span class="token punctuation">}</span> 
<span class="token comment">/* 选中ul中所有li中的a */</span> 
<span class="token selector">ul li a</span> <span class="token punctuation">{</span>
	<span class="token property">color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span> 
<span class="token punctuation">}</span> 
<span class="token comment">/* 选中类名为subject元素中的所有li */</span>
<span class="token selector">.subject li</span> <span class="token punctuation">{</span> 
	<span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span> 
<span class="token punctuation">}</span> 
<span class="token comment">/* 选中类名为subject元素中的所有类名为front-end的li */</span> 
<span class="token selector">.subject li.front-end</span> <span class="token punctuation">{</span>
	<span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：</p><ol><li>后代选择器，最终选择的是后代，不选中祖先</li><li>儿子、孙子、重孙子，都算是后代</li><li>结构一定要符合之前讲的 HTML 嵌套要求，例如：不能 <code>p</code> 中写 <code>h1 ~ h6</code></li></ol><h4 id="_2-3-2-子代选择器" tabindex="-1"><a class="header-anchor" href="#_2-3-2-子代选择器" aria-hidden="true">#</a> 2.3.2 子代选择器</h4><p>作用：选中指定元素中，符合要求的子元素（儿子元素）。（先写父，再写子）</p><p>语法：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">选择器1 &gt; 选择器2 &gt; 选择器3 &gt; ...... 选择器n</span> <span class="token punctuation">{</span>
	样式声明
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* div中的子代a元素 */</span> 
<span class="token selector">div&gt;a</span> <span class="token punctuation">{</span>
	<span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span> 
<span class="token punctuation">}</span> 
<span class="token comment">/* 类名为persons的元素中的子代a元素 */</span> 
<span class="token selector">.persons&gt;a</span><span class="token punctuation">{</span>
	<span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：</p><ol><li>子代选择器，最终选择的是子代，不是父级</li><li>子、孙子、重孙子、重重孙子 ...... 统称后代！，子就是指儿子</li></ol><h4 id="_2-3-3-兄弟选择器" tabindex="-1"><a class="header-anchor" href="#_2-3-3-兄弟选择器" aria-hidden="true">#</a> 2.3.3 兄弟选择器</h4><h5 id="_2-3-3-1-相邻兄弟选择器" tabindex="-1"><a class="header-anchor" href="#_2-3-3-1-相邻兄弟选择器" aria-hidden="true">#</a> 2.3.3.1 相邻兄弟选择器</h5><p>作用：选中指定元素后，符合条件的相邻兄弟元素（所谓相邻，就是紧挨着他的下一个）</p><p>语法：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">选择器1+选择器2</span> <span class="token punctuation">{</span>
	样式声明
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 选中div后相邻的兄弟p元素 */</span>
<span class="token selector">div+p</span> <span class="token punctuation">{</span>
	<span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-3-3-2-通用兄弟选择器" tabindex="-1"><a class="header-anchor" href="#_2-3-3-2-通用兄弟选择器" aria-hidden="true">#</a> 2.3.3.2 通用兄弟选择器</h5><p>作用：选中指定元素后，符合条件的所有兄弟元素</p><p>语法：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">选择器1~选择器2</span> <span class="token punctuation">{</span>
	样式声明
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 选中div后的所有的兄弟p元素 */</span>
<span class="token selector">div~p</span> <span class="token punctuation">{</span>
	<span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-属性选择器" tabindex="-1"><a class="header-anchor" href="#_2-4-属性选择器" aria-hidden="true">#</a> 2.4 属性选择器</h3><p>作用：选中属性值符合一定要求的元素</p><table><thead><tr><th>选择符</th><th>简介</th></tr></thead><tbody><tr><td>E[att]</td><td>选择具有 att 属性的 E 元素</td></tr><tr><td>E[att=&quot;val&quot;]</td><td>选择具有 att 属性且属性值等于 val 的 E 元素</td></tr><tr><td>E[att^=&quot;val&quot;]</td><td>匹配具有 att 属性且值以 val 开头的 E 元素</td></tr><tr><td>E[att$=&quot;val&quot;]</td><td>匹配具有 att 属性且值以 val 结尾的 E 元素</td></tr><tr><td>E[att*=&quot;val&quot;]</td><td>匹配具有 att 属性且值中含有 val 的 E 元素</td></tr></tbody></table><p>示例代码：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code> <span class="token comment">/* 只选择 type=text 文本框的 input 选取出来 */</span>
<span class="token selector">input[type=text]</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">/* 选择首先是 div 然后 具有 class 属性 并且属性值 必须是 icon 开头的这些元素 */</span>
<span class="token selector">div[class^=icon]</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">/* 选择首先是 section 然后 具有 class 属性 并且属性值 必须是 data 结尾的这些元素 */</span>
<span class="token selector">section[class$=data]</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>属性选择器，按照字面意思，都是根据标签中的属性来选择元素，属性选择器可以根据元素特定属性的来选择元素。这样就可以不用借助于类或者 id 选择器，属性选择器也可以选择出来自定义的属性</p><h3 id="_2-5-伪类选择器" tabindex="-1"><a class="header-anchor" href="#_2-5-伪类选择器" aria-hidden="true">#</a> 2.5 伪类选择器</h3><p>作用：选中特殊状态的元素</p><h4 id="_2-5-1-动态伪类" tabindex="-1"><a class="header-anchor" href="#_2-5-1-动态伪类" aria-hidden="true">#</a> 2.5.1 动态伪类</h4><p><code>:link</code> 超链接未被访问的状态 <code>:visited</code> 超链接访问过的状态 <code>:hover</code> 鼠标悬停在元素上的状态 <code>:active</code> 元素激活的状态 <code>:focus</code> 获取焦点的元素</p><p>注意：</p><ol><li>激活表示按下鼠标不松开</li><li>为了确保生效，请按照 LVHA 的顺序声明 <code>:link</code> － <code>:visited</code> － <code>:hover</code> － <code>:active</code></li><li>表单类元素才能使用 <code>:focus</code> 伪类，当用户点击元素、触摸元素、通过键盘的 <code>tab</code> 键等方法选择元素时，就是获得焦点</li></ol><h4 id="_2-5-2-结构伪类" tabindex="-1"><a class="header-anchor" href="#_2-5-2-结构伪类" aria-hidden="true">#</a> 2.5.2 结构伪类</h4><p>结构伪类选择器主要根据文档结构来选择器元素，常用于根据父级选择器里面的子元素</p><table><thead><tr><th>选择符</th><th>简介</th></tr></thead><tbody><tr><td>:first-child</td><td>所有兄弟元素中的第一个</td></tr><tr><td>:last-child</td><td>所有兄弟元素中的最后一个</td></tr><tr><td>:nth-child (n)</td><td>所有兄弟元素中的第 n 个</td></tr><tr><td>:first-of-type</td><td>所有同类型兄弟元素中的第一个</td></tr><tr><td>:last-of-type</td><td>所有同类型兄弟元素中的最后一个</td></tr><tr><td>:nth-of-type (n)</td><td>所有同类型兄弟元素中的第n个</td></tr></tbody></table><p>关于 n 的值：</p><ol><li><code>0</code> 或<code>不写</code> ：什么都选不中 —— 几乎不用</li><li><code>n</code> ：选中所有子元素 —— 几乎不用</li><li><code>1~正无穷的整数</code> ：选中对应序号的子元素</li><li><code>2n</code> 或 <code>even</code> ：选中序号为偶数的子元素</li><li><code>2n+1</code> 或 <code>odd</code> ：选中序号为奇数的子元素</li><li><code>-n+3</code> ：选中的是前 3 个</li><li>n 可以是公式</li></ol><p>了解即可：</p><ol><li><code>:nth-last-child(n)</code> 所有兄弟元素中的倒数第 n 个</li><li><code>:nth-last-of-type(n)</code> 所有同类型兄弟元素中的倒数第 n 个</li><li><code>:only-child</code> 选择没有兄弟的元素（独生子女）</li><li><code>:only-of-type</code> 选择没有同类型兄弟的元素</li><li><code>:root</code> 根元素</li><li><code>:empty</code> 内容为空元素（空格也算内容）</li></ol><h4 id="_2-5-3-否定伪类" tabindex="-1"><a class="header-anchor" href="#_2-5-3-否定伪类" aria-hidden="true">#</a> 2.5.3 否定伪类</h4><p><code>:not(选择器)</code> 排除满足括号中条件的元素</p><h4 id="_2-5-4-ui伪类" tabindex="-1"><a class="header-anchor" href="#_2-5-4-ui伪类" aria-hidden="true">#</a> 2.5.4 UI伪类</h4><ol><li><code>:checked</code> 被选中的复选框或单选按钮</li><li><code>:enable</code> 可用的表单元素（没有 disabled 属性）</li><li><code>:disabled</code> 不可用的表单元素（有 disabled 属性）</li></ol><h4 id="_2-5-5-目标伪类" tabindex="-1"><a class="header-anchor" href="#_2-5-5-目标伪类" aria-hidden="true">#</a> 2.5.5 目标伪类</h4><p><code>:target</code> 选中锚点指向的元素</p><h4 id="_2-5-6-语言伪类" tabindex="-1"><a class="header-anchor" href="#_2-5-6-语言伪类" aria-hidden="true">#</a> 2.5.6 语言伪类</h4><p><code>:lang()</code> 根据指定的语言选择元素（本质是看 lang 属性的值）</p><h3 id="_2-6-伪元素选择器" tabindex="-1"><a class="header-anchor" href="#_2-6-伪元素选择器" aria-hidden="true">#</a> 2.6 伪元素选择器</h3><p>作用：选中元素中的有一些特殊位置</p><p><code>::first-letter</code> 选中元素中的第一个文字</p><p><code>::first-line</code> 选中元素中的第一行文字</p><p><code>::selection</code> 选中被鼠标选中的内容</p><p><code>::placeholder</code> 选中输入框的提示文字</p><p><code>::before</code> 在元素最开始的位置，创建一个子元素（必须用 content 属性指定内容）</p><p><code>::after</code> 在元素最后的位置，创建一个子元素（必须用 content 属性指定内容）</p>`,135),u=n("div",{class:"language-html line-numbers-mode","data-ext":"html"},[n("pre",{class:"language-html"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("style")]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token style"},[n("span",{class:"token language-css"},[s(`
`),n("span",{class:"token selector"},"span::before"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"/* 这个content是必须要写的 */"),s(`
    `),n("span",{class:"token property"},"content"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string"},"'我'"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token selector"},"span::after"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token property"},"content"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string"},"'小猪佩奇'"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("style")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("body")]),n("span",{class:"token punctuation"},">")]),s(`
	`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("span")]),n("span",{class:"token punctuation"},">")]),s("是"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("span")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("body")]),n("span",{class:"token punctuation"},">")]),s(` 
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),v=a('<p>注意：</p><ul><li>before 和 after 创建一个元素，但是属于行内元素</li><li>新创建的这个元素在文档树中是找不到的，所以我们称为伪元素</li><li>语法：<code>element::before {}</code></li><li>before 和 after 必须有 content 属性</li><li>before 在父元素内容的前面创建元素，after 在父元素内容的后面插入元素</li></ul><h2 id="_3-选择器的优先级" tabindex="-1"><a class="header-anchor" href="#_3-选择器的优先级" aria-hidden="true">#</a> 3. 选择器的优先级</h2><p>通过不同的选择器，选中相同的元素，并且为相同的样式名设置不同的值时，就发生了样式的冲突。到底应用哪个样式，此时就需要看优先级了</p><h3 id="_3-1-简单描述" tabindex="-1"><a class="header-anchor" href="#_3-1-简单描述" aria-hidden="true">#</a> 3.1 简单描述</h3><p>行内样式 &gt; ID 选择器 &gt; 类选择器 &gt; 元素选择器 &gt; 通配选择器</p><h3 id="_3-2-详细描述" tabindex="-1"><a class="header-anchor" href="#_3-2-详细描述" aria-hidden="true">#</a> 3.2 详细描述</h3><p>计算方式：每个选择器，都可计算出一组权重，格式为： <code>(a,b,c)</code></p><ul><li>a : ID 选择器的个数</li><li>b : 类、伪类、属性选择器的个数</li><li>c : 元素、伪元素选择器的个数</li></ul><p>例：</p><table><thead><tr><th>选择器</th><th>权重</th></tr></thead><tbody><tr><td><code>ul&gt;li</code></td><td>(0,0,2)</td></tr><tr><td><code>div ul&gt;li p a span</code></td><td>(0,0,6)</td></tr><tr><td><code>#a .slogan</code></td><td>(1,1,0)</td></tr><tr><td><code>#a .slogan a</code></td><td>(1,1,1)</td></tr><tr><td><code>#a .slogan a:hover</code></td><td>(1,2,1)</td></tr></tbody></table><p>比较规则：按照从左到右的顺序，依次比较大小，当前位胜出后，后面的不再对比</p><p>例：</p><ul><li>(1,0,0) &gt; (0,2,2)</li><li>(1,1,0) &gt; (1,0,3)</li><li>(1,1,3) &gt; (1,1,2)</li></ul><p>特殊规则：</p><ol><li>行内样式权重大于所有选择器</li><li><code>!important</code> 的权重，大于行内样式，大于所有选择器，权重最高！</li></ol><p>图示：</p><figure><img src="https://zhf-picture.oss-cn-qingdao.aliyuncs.com/my-img/CSS选择器06.png" alt="CSS选择器06.png" tabindex="0" loading="lazy"><figcaption>CSS选择器06.png</figcaption></figure>',18);function m(h,k){const e=i("CodeDemo");return c(),l("div",null,[r,d(e,{id:"code-demo-819",type:"normal",title:"Demo%20%E6%BC%94%E7%A4%BA",code:"eJyrVsooyc1RslKyKS6pzEm1i8krLkjMs7JKSk3LL0pVqI7JUwACfS2FF/tnPtmxKjk/ryQ1r+TZjPVP97e+XLj7xbLGp20zn89qUdDShyiFqrBSUH/WMVHdOiavFmZkYlpJahHMRISypxv6n/eserJ35dOl7VD1Nvowx9gk5adUAumYEhuQIXZAi4GSIBZIFVhSISZPqRYAjcBSjg=="},{default:p(()=>[u]),_:1}),v])}const f=t(o,[["render",m],["__file","02-CSS选择器.html.vue"]]);export{f as default};
