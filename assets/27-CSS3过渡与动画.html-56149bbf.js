import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as l,c,d as n,e as a,a as o,b as s}from"./app-1a000526.js";const p={},r=s('<h2 id="_1-过渡" tabindex="-1"><a class="header-anchor" href="#_1-过渡" aria-hidden="true">#</a> 1. 过渡</h2><p>过渡可以在不使用 Flash 动画，不使用 JavaScript 的情况下，让元素从一种样式平滑过渡为另一种样式</p><h3 id="_1-1-transition-property" tabindex="-1"><a class="header-anchor" href="#_1-1-transition-property" aria-hidden="true">#</a> 1.1 transition-property</h3><p>作用：定义哪个属性需要过渡，只有在该属性中定义的属性（比如宽、高、颜色等）才会以有过渡效果</p><p>常用值：</p><ol><li>none ：不过渡任何属性</li><li>all ：过渡所有能过渡的属性</li><li>具体某个属性名，例如： width 、 heigth ，若有多个以逗号分隔</li></ol><p>不是所有的属性都能过渡，值为数字，或者值能转为数字的属性，都支持过渡，否则不支持过渡。常见的支持过渡的属性有：颜色、长度值、百分比、 z-index 、 opacity 、 2D 变换属性、 3D 变换属性、阴影</p><h3 id="_1-2-transition-duration" tabindex="-1"><a class="header-anchor" href="#_1-2-transition-duration" aria-hidden="true">#</a> 1.2 transition-duration</h3><p>作用：设置过渡的持续时间，即：一个状态过渡到另外一个状态耗时多久</p><p>常用值：</p><ol><li>0 ：没有任何过渡时间 —— 默认值</li><li>s 或 ms ：秒或毫秒</li><li>列表 ： <ul><li>如果想让所有属性都持续一个时间，那就写一个值</li><li>如果想让每个属性持续不同的时间那就写一个时间的列表</li></ul></li></ol><h3 id="_1-3-transition-delay" tabindex="-1"><a class="header-anchor" href="#_1-3-transition-delay" aria-hidden="true">#</a> 1.3 transition-delay</h3><p>作用：指定开始过渡的延迟时间，单位： s 或 ms</p><h3 id="_1-4-transition-timing-function" tabindex="-1"><a class="header-anchor" href="#_1-4-transition-timing-function" aria-hidden="true">#</a> 1.4 transition-timing-function</h3><p>作用：设置过渡的类型</p><p>常用值：</p><ol><li>ease ： 平滑过渡 —— 默认值</li><li>linear ： 线性过渡</li><li>ease-in ： 慢 → 快</li><li>ease-out ： 快 → 慢</li><li>ease-in-out ： 慢 → 快 → 慢</li><li>step-start ： 等同于 <code>steps (1, start)</code></li><li>step-end ： 等同于 <code>steps (1, end)</code></li><li><code>steps( integer,?)</code> ： 接受两个参数的步进函数。第一个参数必须为正整数，指定函数的步数。第二个参数取值可以是 start 或 end ，指定每一步的值发生变化的时间点。第二个参数默认值为 end</li><li><code>cubic-bezie ( number, number, number, number)</code>： 特定的贝塞尔曲线类型</li></ol>',17),d={href:"https://cubic-bezier.com/#.17,.67,.83,.67",target:"_blank",rel:"noopener noreferrer"},u=s(`<h3 id="_1-5-transition-复合属性" tabindex="-1"><a class="header-anchor" href="#_1-5-transition-复合属性" aria-hidden="true">#</a> 1.5 transition 复合属性</h3><p>如果设置了一个时间，表示 duration ；如果设置了两个时间，第一是 duration ，第二个是 delay ；其他值没有顺序要求</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">transition</span><span class="token punctuation">:</span>1s 1s linear all<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_2-动画" tabindex="-1"><a class="header-anchor" href="#_2-动画" aria-hidden="true">#</a> 2. 动画</h2><h3 id="_2-1-什么是帧" tabindex="-1"><a class="header-anchor" href="#_2-1-什么是帧" aria-hidden="true">#</a> 2.1 什么是帧</h3><p>一段动画，就是一段时间内连续播放 n 个画面。每一张画面，我们管它叫做“帧”。一定时间内连续快速播放若干个帧，就成了人眼中所看到的动画。同样时间内，播放的帧数越多，画面看起来越流畅</p><h3 id="_2-2-什么是关键帧" tabindex="-1"><a class="header-anchor" href="#_2-2-什么是关键帧" aria-hidden="true">#</a> 2.2 什么是关键帧</h3><p>关键帧指的是，在构成一段动画的若干帧中，起到决定性作用的 2-3 帧</p><h3 id="_2-3-动画的基本使用" tabindex="-1"><a class="header-anchor" href="#_2-3-动画的基本使用" aria-hidden="true">#</a> 2.3 动画的基本使用</h3><p>第一步：定义关键帧（定义动画）</p><p>简单定义方式：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/*写法一*/</span> 
<span class="token atrule"><span class="token rule">@keyframes</span> 动画名</span> <span class="token punctuation">{</span>
	<span class="token selector">from</span> <span class="token punctuation">{</span>
		<span class="token comment">/*property1:value1*/</span>
		<span class="token comment">/*property2:value2*/</span>
	<span class="token punctuation">}</span> 
	<span class="token selector">to</span> <span class="token punctuation">{</span>
		<span class="token comment">/*property1:value1*/</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>完整定义方式：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@keyframes</span> 动画名</span> <span class="token punctuation">{</span>
	<span class="token selector">0%</span> <span class="token punctuation">{</span>
		<span class="token comment">/*property1:value1*/</span>
	<span class="token punctuation">}</span>
	<span class="token selector">20%</span> <span class="token punctuation">{</span>
		<span class="token comment">/*property1:value1*/</span>
	<span class="token punctuation">}</span> 
	<span class="token selector">40%</span> <span class="token punctuation">{</span>
		<span class="token comment">/*property1:value1*/</span>
	<span class="token punctuation">}</span> 
	<span class="token selector">60%</span> <span class="token punctuation">{</span> 
		<span class="token comment">/*property1:value1*/</span>
	<span class="token punctuation">}</span> 
	<span class="token selector">80%</span> <span class="token punctuation">{</span>
		<span class="token comment">/*property1:value1*/</span>
	<span class="token punctuation">}</span> 
	<span class="token selector">100%</span> <span class="token punctuation">{</span>
		<span class="token comment">/*property1:value1*/</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第二步：给元素应用动画，用到的属性如下：</p><ol><li>animation-name ：给元素指定具体的动画（具体的关键帧）</li><li>animation-duration ：设置动画所需时间</li><li>animation-delay ：设置动画延迟</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.box</span> <span class="token punctuation">{</span>
	<span class="token comment">/* 指定动画 */</span>
	<span class="token property">animation-name</span><span class="token punctuation">:</span> testKey<span class="token punctuation">;</span>
	<span class="token comment">/* 设置动画所需时间 */</span>
	<span class="token property">animation-duration</span><span class="token punctuation">:</span> 5s<span class="token punctuation">;</span>
	<span class="token comment">/* 设置动画延迟 */</span>
	<span class="token property">animation-delay</span><span class="token punctuation">:</span> 0.5s<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-动画的其他属性" tabindex="-1"><a class="header-anchor" href="#_2-4-动画的其他属性" aria-hidden="true">#</a> 2.4 动画的其他属性</h3><ul><li><p>animation-timing-function ，设置动画的类型，常用值如下：</p><ul><li>ease ： 平滑动画 —— 默认值</li><li>linear ： 线性过渡</li><li>ease-in ： 慢 → 快</li><li>ease-out ： 快 → 慢</li><li>ease-in-out ： 慢 → 快 → 慢</li><li>step-start ： 等同于 <code>steps (1, start)</code></li><li>step-end ： 等同于 <code>steps(1, end)</code></li><li><code>steps( integer,?)</code> ： 接受两个参数的步进函数。第一个参数必须为正整数，指定函数的步数。第二个参数取值可以是 start 或 end ，指定每一步的值发生变化的时间点。第二个参数默认值为 end</li><li><code>cubic-bezie ( number, number, number, number)</code>： 特定的贝塞尔曲线类型</li></ul></li><li><p>animation-iteration-count ，指定动画的播放次数，常用值如下：</p><ul><li>number ：动画循环次数</li><li>infinite ： 无限循环</li></ul></li><li><p>animation-direction ，指定动画方向，常用值如下：</p><ul><li>normal ： 正常方向 (默认)</li><li>reverse ： 反方向运行</li><li>alternate ： 动画先正常运行再反方向运行，并持续交替运行</li><li>alternate-reverse ： 动画先反运行再正方向运行，并持续交替运行</li></ul></li><li><p>animation-fill-mode ，设置动画之外的状态，常用值如下：</p><ul><li>forwards ： 设置对象状态为动画结束时的状态</li><li>backwards ： 设置对象状态为动画开始时的状态</li></ul></li><li><p>animation-play-state ，设置动画的播放状态，常用值如下：</p><ul><li>running ： 运动 (默认)</li><li>paused ： 暂停</li></ul></li></ul><h3 id="_2-5-动画复合属性" tabindex="-1"><a class="header-anchor" href="#_2-5-动画复合属性" aria-hidden="true">#</a> 2.5 动画复合属性</h3><p>只设置一个时间表示 duration ，设置两个时间分别是： duration 和 delay ，其他属性没有数量和顺序要求</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.inner</span> <span class="token punctuation">{</span> 
	<span class="token property">animation</span><span class="token punctuation">:</span> atguigu 3s 0.5s linear 2 alternate-reverse forwards<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>备注： animation-play-state 一般单独使用</p>`,23);function m(v,h){const e=t("ExternalLinkIcon");return l(),c("div",null,[r,n("p",null,[a("在线制作贝塞尔曲线： "),n("a",d,[a("cubic-bezier✿"),o(e)])]),u])}const _=i(p,[["render",m],["__file","27-CSS3过渡与动画.html.vue"]]);export{_ as default};
