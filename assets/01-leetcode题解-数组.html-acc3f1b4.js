import{_ as d,r as s,o as r,c as t,d as e,e as a,a as c,b as o}from"./app-12c37f08.js";const i={},l=e("h2",{id:"_1-【704】二分查找",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1-【704】二分查找","aria-hidden":"true"},"#"),a(" 1. 【704】二分查找")],-1),u=e("h3",{id:"_1-题目描述",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1-题目描述","aria-hidden":"true"},"#"),a(" 1. 题目描述")],-1),h={href:"https://leetcode.cn/problems/binary-search/",target:"_blank",rel:"noopener noreferrer"},_=o(`<p>给定一个 <code>n</code> 个元素有序的（升序）整型数组 <code>nums</code> 和一个目标值 <code>target</code> ，写一个函数搜索 <code>nums</code> 中的 <code>target</code>，如果目标值存在返回下标，否则返回 <code>-1</code><strong>示例 1:</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入: nums = [-1,0,3,5,9,12], target = 9
输出: 4
解释: 9 出现在 nums 中并且下标为 4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2:</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入: nums = [-1,0,3,5,9,12], target = 2
输出: -1
解释: 2 不存在 nums 中因此返回 -1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p><ol><li>你可以假设 <code>nums</code> 中的所有元素是不重复的。</li><li><code>n</code> 将在 <code>[1, 10000]</code>之间。</li><li><code>nums</code> 的每个元素都将在 <code>[-9999, 9999]</code>之间。</li></ol><h3 id="_2-解题思路" tabindex="-1"><a class="header-anchor" href="#_2-解题思路" aria-hidden="true">#</a> 2. 解题思路</h3><h3 id="_3-题解" tabindex="-1"><a class="header-anchor" href="#_3-题解" aria-hidden="true">#</a> 3. 题解</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div>`,9);function m(v,p){const n=s("ExternalLinkIcon");return r(),t("div",null,[l,u,e("p",null,[a("来源："),e("a",h,[a("https://leetcode.cn/problems/binary-search/"),c(n)])]),_])}const b=d(i,[["render",m],["__file","01-leetcode题解-数组.html.vue"]]);export{b as default};
