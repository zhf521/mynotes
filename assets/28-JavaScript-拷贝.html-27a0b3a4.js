import{_ as n,o as s,c as a,b as p}from"./app-4dbbc2a2.js";const t={},e=p(`<p>浅拷贝和深拷贝只针对引用类型</p><h2 id="_1-浅拷贝" tabindex="-1"><a class="header-anchor" href="#_1-浅拷贝" aria-hidden="true">#</a> 1. 浅拷贝</h2><p>浅拷贝：拷贝的是地址</p><p>常见方法：</p><ol><li>拷贝对象：<code>Object.assgin()</code> 或展开运算符 <code>{... obj}</code> 拷贝对象</li><li>拷贝数组：<code>Array.prototype.concat()</code> 或 <code>[...arr]</code></li></ol><p>如果是简单数据类型拷贝值，引用数据类型拷贝的是地址 (简单理解： 如果是单层对象，没问题，如果有多层就有问题)</p><p>直接赋值和浅拷贝的区别：</p><ul><li>直接赋值的方法，只要是对象，都会相互影响，因为是直接拷贝对象栈里面的地址</li><li>浅拷贝如果是一层对象，不相互影响，如果出现多层对象拷贝会相互影响</li></ul><p>浅拷贝的理解：拷贝对象之后，里面的属性值是简单数据类型直接拷贝值，如果属性值是引用数据类型则拷贝的是地址</p><h2 id="_2-深拷贝" tabindex="-1"><a class="header-anchor" href="#_2-深拷贝" aria-hidden="true">#</a> 2. 深拷贝</h2><p>深拷贝：拷贝的是对象，不是地址</p><p>常见方法：</p><ol><li>通过递归实现深拷贝</li><li>lodash/cloneDeep</li><li>通过<code>JSON.stringify()</code>实现</li></ol><h3 id="_2-1-递归实现深拷贝" tabindex="-1"><a class="header-anchor" href="#_2-1-递归实现深拷贝" aria-hidden="true">#</a> 2.1 递归实现深拷贝</h3><p>函数递归：如果一个函数在内部可以调用其本身，那么这个函数就是递归函数</p><ul><li>简单理解:函数内部自己调用自己, 这个函数就是递归函数</li><li>递归函数的作用和循环效果类似</li><li>由于递归很容易发生“栈溢出”错误（stack overflow），所以必须要加退出条件 return</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">uname</span><span class="token operator">:</span> <span class="token string">&#39;pink&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
      <span class="token literal-property property">hobby</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;乒乓球&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;足球&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">family</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">baby</span><span class="token operator">:</span> <span class="token string">&#39;小pink&#39;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> o <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token comment">// 拷贝函数</span>
    <span class="token keyword">function</span> <span class="token function">deepCopy</span><span class="token punctuation">(</span><span class="token parameter">newObj<span class="token punctuation">,</span> oldObj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">debugger</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> k <span class="token keyword">in</span> oldObj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 处理数组的问题  一定先写数组 再写 对象 不能颠倒</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>oldObj<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          newObj<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
          <span class="token comment">//  newObj[k] 接收 []  hobby</span>
          <span class="token comment">//  oldObj[k]   [&#39;乒乓球&#39;, &#39;足球&#39;]</span>
          <span class="token function">deepCopy</span><span class="token punctuation">(</span>newObj<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> oldObj<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>oldObj<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          newObj<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
          <span class="token function">deepCopy</span><span class="token punctuation">(</span>newObj<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> oldObj<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token comment">//  k  属性名 uname age    oldObj[k]  属性值  18</span>
          <span class="token comment">// newObj[k]  === o.uname  给新对象添加属性</span>
          newObj<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> oldObj<span class="token punctuation">[</span>k<span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">deepCopy</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> obj<span class="token punctuation">)</span> <span class="token comment">// 函数调用  两个参数 o 新对象  obj 旧对象</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span>
    o<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">20</span>
    o<span class="token punctuation">.</span>hobby<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;篮球&#39;</span>
    o<span class="token punctuation">.</span>family<span class="token punctuation">.</span>baby <span class="token operator">=</span> <span class="token string">&#39;老pink&#39;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span>
    <span class="token comment">// 复习</span>
    <span class="token comment">// const obj = {</span>
    <span class="token comment">//   uname: &#39;pink&#39;,</span>
    <span class="token comment">//   age: 18,</span>
    <span class="token comment">//   hobby: [&#39;乒乓球&#39;, &#39;足球&#39;]</span>
    <span class="token comment">// }</span>
    <span class="token comment">// function deepCopy({ }, oldObj) {</span>
    <span class="token comment">//   // k 属性名  oldObj[k] 属性值</span>
    <span class="token comment">//   for (let k in oldObj) {</span>
    <span class="token comment">//     // 处理数组的问题   k 变量</span>
    <span class="token comment">//     newObj[k] = oldObj[k]</span>
    <span class="token comment">//     // o.uname = &#39;pink&#39;</span>
    <span class="token comment">//     // newObj.k  = &#39;pink&#39;</span>
    <span class="token comment">//   }</span>
    <span class="token comment">// }</span>
  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-js库lodash里面clonedeep内部实现了深拷贝" tabindex="-1"><a class="header-anchor" href="#_2-2-js库lodash里面clonedeep内部实现了深拷贝" aria-hidden="true">#</a> 2.2 js库lodash里面cloneDeep内部实现了深拷贝</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 先引用 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./lodash.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">uname</span><span class="token operator">:</span> <span class="token string">&#39;pink&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
      <span class="token literal-property property">hobby</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;乒乓球&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;足球&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">family</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">baby</span><span class="token operator">:</span> <span class="token string">&#39;小pink&#39;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> o <span class="token operator">=</span> _<span class="token punctuation">.</span><span class="token function">cloneDeep</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span>
    o<span class="token punctuation">.</span>family<span class="token punctuation">.</span>baby <span class="token operator">=</span> <span class="token string">&#39;老pink&#39;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(t,[["render",c],["__file","28-JavaScript-拷贝.html.vue"]]);export{k as default};
