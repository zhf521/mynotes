import{_ as a,o as n,c as s,b as t}from"./app-ded67850.js";const e={},p=t(`<h2 id="_1-如何理解html语义化" tabindex="-1"><a class="header-anchor" href="#_1-如何理解html语义化" aria-hidden="true">#</a> 1. 如何理解HTML语义化</h2><p>语义化是指根据内容的结构化（内容语义化），选择合适的标签（代码语义化）。通俗来讲就是用正确的标签做正确的事情</p><p>语义化的优点如下：</p><ul><li><p><strong>用户</strong>：提高<strong>体验</strong>，比如：<strong>title，alt</strong>用于<strong>解释</strong>名词和图片信息</p></li><li><p><strong>非技术</strong>人员：能看懂代码，很好的呈现内容<strong>结构</strong>、代码结构</p></li><li><p><strong>技术</strong>人员：便于团队<strong>开发与维护</strong>，<strong>语义化</strong>更具有<strong>可读性</strong></p></li><li><p><strong>搜索引擎</strong>：利于<strong>SEO</strong>。语义化能和搜索引擎建立更好的联系，优化搜索。还支持读屏软件，根据文章可以自动生成目录，有利于<strong>无障碍</strong></p></li></ul><p>常见的语义化标签：</p><p><code>&lt;header&gt;&lt;/header&gt;</code> 头部</p><p><code>&lt;nav&gt;&lt;/nav&gt;</code> 导航栏</p><p><code>&lt;section&gt;&lt;/section&gt;</code> 区块（有语义化的div）</p><p><code>&lt;main&gt;&lt;/main&gt;</code> 主要区域</p><p><code>&lt;article&gt;&lt;/article&gt;</code> 主要内容</p><p><code>&lt;aside&gt;&lt;/aside&gt;</code> 侧边栏</p><p><code>&lt;footer&gt;&lt;/footer&gt;</code> 底部</p><h2 id="_2-web标准与w3c标准" tabindex="-1"><a class="header-anchor" href="#_2-web标准与w3c标准" aria-hidden="true">#</a> 2. WEB标准与W3C标准</h2><p>WEB标准是指由万维网联盟（World Wide Web Consortium，简称W3C）制定的一系列技术规范和指南，旨在确保网页在不同的浏览器和设备上具有一致的表现和行为</p><p>W3C标准是由W3C组织制定和推广的一系列技术标准，旨在推动网络技术的发展和互操作性</p><p><strong>具体来说，WEB标准和W3C标准强调以下几个方面：</strong></p><ul><li><strong>标签闭合</strong>：HTML标签必须按照规定的格式正确闭合，以确保页面结构的准确性和一致性</li><li><strong>标签小写</strong>：HTML标签和属性应该使用小写字母，以避免浏览器解析错误</li><li><strong>不乱嵌套</strong>：HTML标签应该按照正确的嵌套规则进行使用，不应该出现乱七八糟的嵌套结构，以确保页面结构的清晰和可维护性</li><li><strong>使用外链CSS和JS</strong>：将CSS样式和JavaScript代码尽可能地放在外部文件中，并通过链接的方式引入，以实现结构、行为和表现的分离，提高代码的可重用性和可维护性</li></ul><h2 id="_3-src和href的区别" tabindex="-1"><a class="header-anchor" href="#_3-src和href的区别" aria-hidden="true">#</a> 3. src和href的区别</h2><p><strong>src 用于替换当前元素，href 用于在当前文档和引用资源之间确立联系</strong></p><h3 id="_1-src" tabindex="-1"><a class="header-anchor" href="#_1-src" aria-hidden="true">#</a> 1. src</h3><p>src指向外部资源的位置，指向的内容将会嵌入到文档中当前标签所在位置；在请求 src 资源时会将其指向的资源下载并应用到文档内</p><p>src用于img、input、style、script、iframe</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span>”js.js”</span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-href" tabindex="-1"><a class="header-anchor" href="#_2-href" aria-hidden="true">#</a> 2. href</h3><p>href 是 Hypertext Reference 的缩写，指向网络资源所在位置，建立和当前元素（锚点）或当前文档（链接）之间的链接</p><p>href用于link、a标签</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>”common.css”</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>”stylesheet”/</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_4-doctype的作用" tabindex="-1"><a class="header-anchor" href="#_4-doctype的作用" aria-hidden="true">#</a> 4. DOCTYPE的作用</h2><p><code>DOCTYPE</code>即Document Type（文档类型声明）的作用是告知浏览器的解析器使用哪种<code>HTML</code>或<code>XHTML</code>规范来解析文档</p><p>DOCTYPE需要放置在HTML文件的<code>&lt;html&gt;</code>标签之前</p><p>当前主流：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
    ...
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>早期：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span> <span class="token name">PUBLIC</span> <span class="token string">&quot;-//W3C//DTD HTML 4.01//EN&quot;</span> <span class="token string">&quot;http://www.w3.org/TR/html4/strict.dtd&quot;</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
    ...
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-script标签中defer和async" tabindex="-1"><a class="header-anchor" href="#_5-script标签中defer和async" aria-hidden="true">#</a> 5. script标签中defer和async</h2><p>defer 和 async 的使用, 可以用于提升网页性能</p><p>script 标签存在两个属性，defer 和 async，因此 script 标签 的使用分为三种情况：</p><ol><li><p><code>&lt;script src=&quot;example.js&quot;&gt;&lt;/script&gt;</code></p><p>没有 defer 或 async 属性，浏览器会立即加载并执行相应的脚本</p><p>不等待后续加载的文档元素，读到就开始加载和执行，此举会阻塞后续文档的加载</p></li><li><p><code>&lt;script async src=&quot;example.js&quot;&gt;&lt;/script&gt;</code></p><p>有了 async 属性，表示后续文档的加载和渲染与 js 脚本的加载和执行是并行进行的，即异步执行</p></li><li><p><code>&lt;script defer src=&quot;example.js&quot;&gt;&lt;/script&gt;</code></p><p>有了 defer 属性，加载后续文档的过程和 js 脚本的加载是并行进行的(异步)，此时的 js 脚本仅加载不执行, js 脚本的执行需要等到文档所有元素解析完成之后，DOMContentLoaded 事件触发执行之前</p></li></ol><figure><img src="https://zhf-picture.oss-cn-qingdao.aliyuncs.com/my-img/面试笔记-HTML01.png" alt="面试笔记-HTML01.png" tabindex="0" loading="lazy"><figcaption>面试笔记-HTML01.png</figcaption></figure><blockquote><p>图例：绿线：HTML 的解析时间</p><p>蓝线：JS 脚本的加载时间</p><p>红色：JS 脚本的执行时间</p></blockquote><p>区别：</p><ol><li>defer 和 async 在网络加载过程是一致的，都是异步执行的；(放在页面顶部, 也不会阻塞页面的加载, 与页面加载同时进行)</li><li>两者的区别, 脚本加载完成之后, async 是立刻执行, defer 会等一等 (等前面的 defer 脚本执行, 等 dom 的加载)</li></ol><h2 id="_6-meta标签的常用用法" tabindex="-1"><a class="header-anchor" href="#_6-meta标签的常用用法" aria-hidden="true">#</a> 6. meta标签的常用用法</h2><p><code>&lt;meta&gt;</code>标签的具体功能一般由<code>name/http-equiv</code>和<code>content</code>两部分属性来定义</p><ul><li>如果设置 <code>name</code> 属性，则它描述的是网页文档的信息（例如：作者、日期和时间、网页描述、 关键词）</li><li>如果设置 <code>http-equiv</code> 属性，则它描述的相当于是 HTTP 响应头信息（例如：网页内容信息, 网页缓存等）</li></ul><p>常用的meta标签：</p><ol><li><p>charset，用来描述HTML文档的编码类型：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>keywords，页面关键词：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>keywords<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>关键词<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>description，页面描述：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>description<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>页面描述内容<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>refresh，页面重定向和刷新：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>refresh<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0;url=<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>viewport，适配移动端，可以控制视口的大小和比例：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1, maximum-scale=1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中，content 参数有以下几种：</p><ul><li>width：宽度(数值/device-width)</li><li>height：高度(数值/device-height)</li><li>initial-scale：初始缩放比例</li><li>maximum-scale：最大缩放比例</li><li>minimum-scale：最小缩放比例</li><li>user-scalable：是否允许用户缩放(yes/no）</li></ul></li><li><p>搜索引擎索引方式：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>robots<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index,follow<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中，content 参数有以下几种：</p><ul><li><p>all：文件将被检索，且页面上的链接可以被查询</p></li><li><p>none：文件将不被检索，且页面上的链接不可以被查询</p></li><li><p>index：文件将被检索</p></li><li><p>follow：页面上的链接可以被查询</p></li><li><p>noindex：文件将不被检索</p></li><li><p>nofollow：页面上的链接不可以被查询</p></li></ul></li></ol><h2 id="_7-html5更新内容" tabindex="-1"><a class="header-anchor" href="#_7-html5更新内容" aria-hidden="true">#</a> 7. HTML5更新内容</h2><ol><li>新增语义化标签：nav、header、footer、aside、section、article</li><li>只有一种DOCTYPE文件类型声明（<code>&lt;!DOCTYPE html&gt;</code>）</li><li>新增音视频标签：audio、video</li><li>本地存储：localStorage、sessionStorage</li><li>Canvas绘图、Geolocation地理定位、WebSocket即时通信、拖拽API</li><li>input支持新的类型值：date、email、url等</li><li>history API：go、forward、back、pushstate</li></ol><p>移除了：</p><ol><li>纯表现的元素：basefont，big，center，font, s，strike，tt，u</li><li>对可用性产生负面影响的元素：frame，frameset，noframes</li></ol>`,51),l=[p];function o(c,i){return n(),s("div",null,l)}const u=a(e,[["render",o],["__file","01-面试笔记-HTML.html.vue"]]);export{u as default};
