import{_ as t,o as e,c as l,b as n,d as s,e as a}from"./app-e8e9fc6e.js";const p={},c=n('<p>算法的复杂性体现在运行该算法时占用计算机资源的多少上，计算机最重要的资源是时间（CPU）和空间（内存），因此复杂度分为时间和空间复杂度</p><ul><li>时间复杂度 <code>T(n)</code> —— 根据算法写成的程序在执行时<mark>耗费时间的长度</mark></li></ul><ul><li>空间复杂度 <code>S(n)</code> ——根据算法写成的程序在执行时<mark>占用存储单元的长度</mark></li></ul><h2 id="_1-时间复杂度" tabindex="-1"><a class="header-anchor" href="#_1-时间复杂度" aria-hidden="true">#</a> 1. 时间复杂度</h2><p>定义：在进行算法分析时，语句总的执行次数 <code>T(n)</code> 是关于问题规模 <code>n</code> 的函数，进而分析 <code>T(n)</code> 随 <code>n</code> 的变化情况并确定 <code>T(n)</code> 的数量级，即<mark>算法运行时间随着数据量变大时的增长趋势</mark></p><h3 id="_1-1-函数渐近上界" tabindex="-1"><a class="header-anchor" href="#_1-1-函数渐近上界" aria-hidden="true">#</a> 1.1 函数渐近上界</h3><p>设算法 <code>计算操作数量</code> 为 <code>T(n)</code> ，其是一个关于输入数据大小 n 的函数</p><p>例如，某算法的操作数量为 <code>T(n) = 3 + 2n</code>，<code>T(n)</code> 是个一次函数，说明时间增长趋势是线性的，因此易得时间复杂度是线性阶，我们将线性阶的时间复杂度记为 <code>O(n)</code>，这个数学符号被称为 <code>大O记号</code>，代表函数 <code>T(n)</code> 的 <code>渐近上界</code></p><p>我们要推算时间复杂度，本质上是在计算 <code>操作数量函数 T(n)</code> 的渐近上界 本质上看，计算 <code>渐近上界</code> 就是在找一个函数 <code>f(n)</code> ，使得在 <code>n</code> 趋向于无穷大时，<code>T(n)</code> 和 <code>f(n)</code> 处于相同的增长级别（仅相差一个常数项 <code>c</code> 的倍数）</p><h3 id="_1-2-推算大o阶的方法" tabindex="-1"><a class="header-anchor" href="#_1-2-推算大o阶的方法" aria-hidden="true">#</a> 1.2 推算大O阶的方法</h3><p>推算出 <code>f(n)</code> 后，我们就得到时间复杂度 <code>O(f(n))</code> 首先 <code>统计操作数量</code>，然后 <code>判断渐近上界</code> 即可确定渐近上界 <code>f(n)</code></p><h4 id="_1-2-1-统计操作数量" tabindex="-1"><a class="header-anchor" href="#_1-2-1-统计操作数量" aria-hidden="true">#</a> 1.2.1 统计操作数量</h4><p>对着代码，从上到下一行一行地计数即可。操作数量 <code>T(n)</code> 中的各种系数、常数项都可以被忽略。根据此原则，可以总结出以下计数技巧：</p><ol><li>跳过数量与 <code>n</code> 无关的操作。因为他们都是 <code>T(n)</code> 中的常数项，对时间复杂度不产生影响</li><li>省略所有系数。例如，循环 <code>2n次</code>、<code>5n+1 次</code>、……，都可以化简记为 <code>n 次</code>，因为 <code>n</code> 前面的系数对时间复杂度也不产生影响</li><li>循环嵌套时使用乘法。总操作数量等于外层循环和内层循环操作数量之积，每一层循环依然可以分别套用上述 <code>1.</code> 和 <code>2.</code> 技巧</li></ol>',14),o=s("p",null,[a("根据以下示例，使用上述技巧得到的统计结果为 "),s("mark",null,[a("T (n) = "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mi",null,"n"),s("mn",null,"2")])]),s("annotation",{encoding:"application/x-tex"},"n^2")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8141em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"n"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])])])])])])])])]),a(" + n")])],-1),i=n(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment">// +0（技巧 1）</span>
a <span class="token operator">=</span> a <span class="token operator">+</span> n <span class="token comment">// +0（技巧 1）</span>
<span class="token comment">// +n（技巧 2）</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">5</span><span class="token operator">*</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// +n*n（技巧 3）</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">2</span><span class="token operator">*</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-2-2-判断渐近上界" tabindex="-1"><a class="header-anchor" href="#_1-2-2-判断渐近上界" aria-hidden="true">#</a> 1.2.2 判断渐近上界</h4><p>时间复杂度由多项式 <code>T(n)</code> 中最高阶的项来决定。这是因为在 <code>n</code> 趋于无穷大时，最高阶的项将处于主导作用，其它项的影响都可以被忽略</p>`,3),m=s("p",null,[a("因此上述例子推出的时间复杂度结果为 "),s("mark",null,[a("O("),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mi",null,"n"),s("mn",null,"2")])]),s("annotation",{encoding:"application/x-tex"},"n^2")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8141em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"n"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])])])])])])])])]),a(")")])],-1),r=s("h3",{id:"_1-3-常见类型",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_1-3-常见类型","aria-hidden":"true"},"#"),a(" 1.3 常见类型")],-1),d=s("p",null,"时间复杂度按数量级递增顺序为：",-1),h=s("p",null,[a("常数阶 O (1)<对数阶 O ("),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"log"),s("mo",null,"⁡"),s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"\\log n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mop"},[a("lo"),s("span",{style:{"margin-right":"0.01389em"}},"g")]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"n")])])]),a(" )<线性阶 O (n)<线性对数阶 O ("),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n"),s("mi",null,"log"),s("mo",null,"⁡"),s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"n\\log n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mop"},[a("lo"),s("span",{style:{"margin-right":"0.01389em"}},"g")]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"n")])])]),a(" )<平方阶 O ("),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mi",null,"n"),s("mn",null,"2")])]),s("annotation",{encoding:"application/x-tex"},"n^2")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8141em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"n"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])])])])])])])])]),a(")<立方阶 O ("),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mi",null,"n"),s("mn",null,"3")])]),s("annotation",{encoding:"application/x-tex"},"n^3")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8141em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"n"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"3")])])])])])])])])])]),a(")<k 次方阶 O ("),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mi",null,"n"),s("mi",null,"k")])]),s("annotation",{encoding:"application/x-tex"},"n^k")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8491em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"n"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8491em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03148em"}},"k")])])])])])])])])])]),a(")<指数阶 O ("),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mn",null,"2"),s("mi",null,"n")])]),s("annotation",{encoding:"application/x-tex"},"2^n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6644em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.6644em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])])])])])])])])]),a(")<O (n!)<O ("),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mi",null,"n"),s("mi",null,"n")])]),s("annotation",{encoding:"application/x-tex"},"n^n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6644em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"n"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.6644em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])])])])])])])])]),a(")")],-1),u=s("h2",{id:"_2-空间复杂度",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2-空间复杂度","aria-hidden":"true"},"#"),a(" 2. 空间复杂度")],-1),k=s("p",null,[a("常见的空间复杂度有O(1)、O(n) 和 O("),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mi",null,"n"),s("mn",null,"2")])]),s("annotation",{encoding:"application/x-tex"},"n^2")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8141em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"n"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])])])])])])])])]),a(")")],-1),g=[c,o,i,m,r,d,h,u,k];function x(_,v){return e(),l("div",null,g)}const b=t(p,[["render",x],["__file","10-JS数据结构与算法-算法的衡量.html.vue"]]);export{b as default};
